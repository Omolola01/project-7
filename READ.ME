# Project 7-  Devops Tooling Website Solution

Open 5 instances : 1 NFS, 3 Webserver, 1 database
Create a volume and attach it your NFS

ssh into your NFS instance 
### Configure Lvm 
`lsblk'
`sudo yum install lvm2 -y`

`sudo lvmdiskscan` to check for availiable partition

`sudo pvcreate /dev/xvdf1`
`sudo pvcreate /dev/xvdg1`
`sudo pvcreate /dev/xvdh1`

`sudo pvs` To check your volume group

`sudo vgcreate webdata-vg /dev/xvdf1 /dev/xvdg1 /dev/xvdh1` To create a volume group

`sudo vgs`

`sudo lvcreate -n lv-apps -L 9G webdata-vg`
`sudo lvcreate -n lv-logs -L 9G webdata-vg`

`sudo lvs`
`lsblk`
`sudo vgdisplay -v #view complete setup - VG, PV, and LV`

Formating the disks as xfs `sudo mkfs -t xfs /dev/webdata-vg/lv-apps`

`sudo mkfs -t xfs /dev/webdata-vg/lv-opt`

`sudo mkfs -t xfs /dev/webdata-vg/lv-logs`

`sudo mkdir /mnt/apps` `sudo mkdir /mnt/opt` `sudo mkdir /mnt/logs`

Create mount points on /mnt directory for the logical volumes
`sudo mount /dev/webdata-vg/lv-apps /mnt/apps`
`sudo mount /dev/webdata-vg/lv-logs /mnt/logs`
`sudo mount /dev/webdata-vg/lv-opt /mnt/opt`

Install NFS server, configure it to start on reboot and make sure it is u and running
`sudo yum -y update`
`sudo yum install nfs-utils -y`
`sudo systemctl start nfs-server.service`
`sudo systemctl enable nfs-server.service`
`sudo systemctl status nfs-server.service`
![Nfs-status](./Images/nfs-status.PNG)

Set up permission that will allow our Web servers to read, write and execute files on NFS
`sudo chown -R nobody: /mnt/apps`
`sudo chown -R nobody: /mnt/logs`
`sudo chown -R nobody: /mnt/opt`

`sudo chmod -R 777 /mnt/apps`
`sudo chmod -R 777 /mnt/logs`
`sudo chmod -R 777 /mnt/opt`

`sudo systemctl restart nfs-server.service`

Configure access to NFS for clients within the same subnet: Use IPV4 CIDR OF NFS as subnet
`sudo vi /etc/exports`

/mnt/apps <Subnet-CIDR>(rw,sync,no_all_squash,no_root_squash)
/mnt/logs <Subnet-CIDR>(rw,sync,no_all_squash,no_root_squash)
/mnt/opt <Subnet-CIDR>(rw,sync,no_all_squash,no_root_squash)

sudo exportfs -arv  so that webserver will see it when they want to connect

Check which port is used by NFS and open it using Security Groups (add new Inbound Rule)
rpcinfo -p | grep nfs
![tcp](./Images/tcp-grep.PNG)
![Port](./Images/udp.PNG)


## Database Configuration
Launch into database instance
 `sudo apt install mysql-server -y`
 `sudo mysql`
 `create database tooling;`
 `create user 'webaccess'@'webserver ipv4 cidr' identified by 'password';`
 `grant all privileges on tooling.* to 'webaccess'@'webserver ipv4 cidr';`
 `flush privileges;`
 `show databases;` to show database
 `use tooling;`

 ## Webserver
 The followig steps should be done on the 3 webserver instance
`sudo yum install nfs-utils nfs4-acl-tools -y` Install NFS client

Mount /var/www/ and target the NFS server’s export for apps
 `sudo mkdir /var/www`

 `sudo mount -t nfs -o rw,nosuid <NFS-Server-Private-IP-Address>:/mnt/apps /var/www`
 `df -h` to verify if nfs was properly mounted succesfully
 `sudo vi /etc/fstab`
 <NFS-Server-Private-IP-Address>:/mnt/apps /var/www nfs defaults 0 0
Do this for the  two remaining webserver

  `sudo yum install httpd -y`

 `sudo ls /var/log/httpd to check for apache log file`

 `sudo mount -t nfs -o rw,nosuid 172.31.38.185:/mnt/logs /var/log/httpd`

 Fork the tooling source code from [here](https://github.com/darey-io/tooling)

 `sudo yum install git`  to install git
 git init
 git clone https://github.com/darey-io/tooling.git

 `ls`
 `cd tooling`
 `ls /var/www  to check ap`

  sudo cp -R html/. /var/www/html

  To confirm the copy
  `ls /var/www/html`
    `ls html`

  open port 80
  open webserver ip on browser, If it doesn't work, check if apache is running, if not
  ![Browser-image](./Images/browser-end.PNG)


  sudo setenforce 0
  sudo vi /etc/sysconfig/selinux
  set SELINUX=disabled

Update the website’s configuration to connect to the database
  `sudo vi /var/www/html/functions.php` to Apply tooling-db.sql script to your database using this command
 ![configuration image](./Images/configuration.PNG)
  `cd tooling`
   `mysql -h 172.31.32.247 -u webaccess -p pasword < tooling-db.sql`

If you have issues when loging t your user in mysql
Add mysql/aurora on  webserver
   ![Mysql-aurorq](./Images/aurora.PNG)
   sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf
   change the bind address and mysql address to 0.0.0.0

Create in MySQL a new admin user with username and password
INSERT INTO ‘users’ (‘id’, ‘username’, ‘password’, ’email’, ‘user_type’, ‘status’) VALUES
-> (1, ‘myuser’, ‘5f4dcc3b5aa765d61d8327deb882cf99’, ‘user@mail.com’, ‘admin’, ‘1’);

Open the website in your browser http://<Web-Server-Public-IP-Address/index.php
Make sure you can login into the websute with myuser user.![alt text](image.jpg)

![wordpress-image](./Images/wordpress-image.PNG)




